buildscript {
    ext {
        gitPropertiesPluginVersion = '1.5.1'
        cfAppVersion = '2.2.0'
        dockerPluginVersion = '1.5.4'
        kotlinVersion = '1.2.51'
        springBootVersion = '2.0.3.RELEASE'
        springDependencyManagementPluginVersion = '1.0.6.RELEASE'
    }
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagementPluginVersion}")
        classpath("com.github.pivotalservices:ya-cf-app-gradle-plugin:${cfAppVersion}")
        classpath("gradle.plugin.org.sgornostal:gradle-docker-plugin:${dockerPluginVersion}")
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gitPropertiesPluginVersion}")
    }
}

allprojects {
    
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-jpa'
    apply plugin: 'kotlin-spring'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'com.gorylenko.gradle-git-properties'

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }
    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "1.8"
        }
    }

    gitProperties {
        dateFormat = "yyyy-MM-dd'T'HH:mmZ"
        dateFormatTimeZone = "UTC"
    }

    dependencies {
        compile('org.jetbrains.kotlin:kotlin-stdlib-jre8')
        compile('org.jetbrains.kotlin:kotlin-reflect')
    }
}

subprojects {

    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.sgornostal.docker'

    jacoco { toolVersion = "0.8.1" }
    
    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
            csv.enabled = false
        }
        additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
        classDirectories = files(subprojects.sourceSets.main.output)
        onlyIf = {
            true
        }
        doFirst {
            executionData = files(executionData.findAll {
                it.exists()
            })
        }
    }
    
    check.dependsOn jacocoTestReport
        
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
        maven { url "https://repo.spring.io/release" }
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter')
        compile('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml')
        compile('org.flywaydb:flyway-core')
        testCompile('org.springframework.boot:spring-boot-starter-test')
        testCompile('org.assertj:assertj-core')
        testCompile('org.mockito:mockito-core')
        testCompile('com.nhaarman:mockito-kotlin:1.5.0')
    }

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    
    bootJar.enabled = false
    jar.enabled = true
}
