buildscript {
    ext {
        gitPropertiesPluginVersion = '2.5.3'
        cfAppVersion = '2.2.0'
        kotlinVersion = '2.2.20'
        springBootVersion = '3.5.6'
        springDependencyManagementPluginVersion = '1.1.7'
    }
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
        maven { url "https://repo.spring.io/release" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("io.spring.gradle:dependency-management-plugin:${springDependencyManagementPluginVersion}")
        classpath("com.github.pivotalservices:ya-cf-app-gradle-plugin:${cfAppVersion}")
        classpath("gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gitPropertiesPluginVersion}")
    }
}

allprojects {

    apply plugin: 'kotlin'
    apply plugin: 'kotlin-jpa'
    apply plugin: 'kotlin-spring'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'com.gorylenko.gradle-git-properties'

    implementationKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "21"
        }
    }
    implementationTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = "21"
        }
    }

    gitProperties {
        dateFormat = "yyyy-MM-dd'T'HH:mmZ"
        dateFormatTimeZone = "UTC"
    }

    dependencies {
        implementation('org.jetbrains.kotlin:kotlin-reflect')
    }
}

subprojects {

    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    jacoco { toolVersion = "0.8.13" }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
            csv.enabled = false
        }
        additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
        classDirectories = files(subprojects.sourceSets.main.output)
        onlyIf = {
            true
        }
        doFirst {
            executionData = files(executionData.findAll {
                it.exists()
            })
        }
    }

    check.dependsOn jacocoTestReport

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
        maven { url "https://repo.spring.io/release" }
    }

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter')
        implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml')
        implementation('org.flywaydb:flyway-core')
        implementation('org.flywaydb:flyway-database-hsqldb')
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation('org.assertj:assertj-core')
        testImplementation('org.mockito:mockito-core')
        testImplementation('org.mockito.kotlin:mockito-kotlin:6.0.0')
    }

    test {
        useJUnitPlatform()
    }

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21

    bootJar.enabled = false
    jar.enabled = true
}
