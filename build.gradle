buildscript {
    ext {
        cfAppVersion = '2.2.0'
    }
    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
    }
    dependencies {
        classpath("com.github.pivotalservices:ya-cf-app-gradle-plugin:${cfAppVersion}")
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '2.2.20' apply false
    id 'org.jetbrains.kotlin.plugin.spring' version '2.2.20' apply false
    id 'org.jetbrains.kotlin.plugin.jpa' version '2.2.20' apply false
    id 'org.springframework.boot' version '3.5.6' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
    id 'com.gorylenko.gradle-git-properties' version '2.5.3' apply false
}

allprojects {

    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.jpa'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'com.gorylenko.gradle-git-properties'

    kotlin {
        jvmToolchain(21)
        compilerOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
        }
    }

    gitProperties {
        dateFormat = "yyyy-MM-dd'T'HH:mmZ"
        dateFormatTimeZone = "UTC"
    }

    dependencies {
        implementation('org.jetbrains.kotlin:kotlin-reflect')
    }
}

subprojects {

    apply plugin: 'jacoco'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    jacoco { toolVersion = "0.8.13" }

    jacocoTestReport {
        reports {
            xml.required = true
            html.required = true
            csv.required = false
        }
    }

    test.finalizedBy jacocoTestReport
    jacocoTestReport.dependsOn test

    repositories {
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/releases" }
    }

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter')
        implementation('com.fasterxml.jackson.dataformat:jackson-dataformat-yaml')
        implementation('org.flywaydb:flyway-core')
        implementation('org.flywaydb:flyway-database-hsqldb')
        testImplementation('org.springframework.boot:spring-boot-starter-test') {
            exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        }
        testImplementation('org.assertj:assertj-core')
        testImplementation('org.mockito:mockito-core')
        testImplementation('org.mockito.kotlin:mockito-kotlin:6.0.0')
    }

    test {
        useJUnitPlatform()
    }


    bootJar.enabled = false
    jar.enabled = true
}
