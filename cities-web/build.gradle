apply plugin: 'cf-app'

bootJar {
    enabled = true
    classifier = 'exec'
}

jar.enabled = false

bootRun {
    systemProperties = System.properties
}

cfConfig {
    //CF Details
    ccHost = "api.run.pivotal.io"
    ccUser = "admin"
    ccPassword = "admin"
    org = "myOrg"
    space = "mySpace"

    //App Details
    name = "${bootJar.baseName}"
    host = "${bootJar.baseName}"
    filePath = "${buildDir}/libs/${bootJar.archiveName}"
    path = ""
    domain = "cfapps.io"
    instances = 1
    memory = 1024

    //Env and services
    buildpack = "https://github.com/cloudfoundry/java-buildpack"
    environment = ["JAVA_OPTS": "-Djava.security.egd=file:/dev/./urandom", "SPRING_PROFILES_ACTIVE": "cloud"]
}

tasks.named("bootBuildImage") {
    imageName = "${dockerImagePrefix}/${bootJar.baseName}:${project.version}"
    tags = ["${dockerImagePrefix}/${bootJar.baseName}:latest"]
    environment = [
        "BP_JVM_VERSION": "21"
    ]
    if (project.hasProperty("publishImage") && publishImage.toBoolean()) {
        publish = true
        docker {
            publishRegistry {
                url = "us.gcr.io"
                username = "oauth2accesstoken"
                password = file('build/oauth2accesstoken').text.trim()
            }
        }
    }
}

dependencies {
    compile project(':cities-domain')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.data:spring-data-rest-hal-explorer')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile('com.zaxxer:HikariCP')
    compile('io.micrometer:micrometer-registry-prometheus:1.15.4')
    runtime('org.hsqldb:hsqldb:2.7.4')
    runtime('org.postgresql:postgresql:42.7.8')
}

