apply plugin: 'cf-app'

bootJar {
    enabled = true
    classifier = 'exec'
}

jar.enabled = false

bootRun {
    systemProperties = System.properties
}

cfConfig {
    //CF Details
    ccHost = "api.run.pivotal.io"
    ccUser = "admin"
    ccPassword = "admin"
    org = "myOrg"
    space = "mySpace"

    //App Details
    name = "${bootJar.baseName}"
    host = "${bootJar.baseName}"
    filePath = "${buildDir}/libs/${bootJar.archiveName}"
    path = ""
    domain = "cfapps.io"
    instances = 1
    memory = 1024

    //Env and services
    buildpack = "https://github.com/cloudfoundry/java-buildpack"
    environment = ["JAVA_OPTS": "-Djava.security.egd=file:/dev/./urandom", "SPRING_PROFILES_ACTIVE": "cloud"]
}

docker {
    dependsOn bootJar
    imageName = "${dockerImagePrefix}/${bootJar.baseName}"
    buildArgs = ['JAR_FILE': "${bootJar.archiveName}"]
    tags 'latest', project.version
    files bootJar.archivePath
    dockerFile "${projectDir}/specs/docker/Dockerfile"
    run {
        ports '8080:8080'
        env 'JAVA_OPTS=-Xmx1G -XX:+UseG1GC'
    }
    clean { 
        force = true                                    
    }
}

dockerRegistries {
    // You'll want to replace the portion of the url below after the / with your own project_id
    gcr {
        url = 'us.gcr.io/fe-cphillipson'
        username = 'oauth2accesstoken'
        password = file('build/oauth2accesstoken').text.trim()
    }
}

dependencies {
    compile project(':cities-domain')
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-hateoas')
    compile('org.springframework.data:spring-data-rest-hal-browser')
    compile('com.fasterxml.jackson.module:jackson-module-kotlin')
    compile('com.zaxxer:HikariCP')
    compile('io.micrometer:micrometer-registry-prometheus:1.0.6')
    runtime('org.hsqldb:hsqldb:2.4.1')
    runtime('org.postgresql:postgresql:42.2.4')
}

build.dependsOn buildDocker