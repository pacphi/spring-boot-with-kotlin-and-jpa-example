spring:
  application:
    name: cities-web

  profiles:
    active: local

  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false

  flyway:
    locations: classpath:db/migration
    baseline-on-migrate: true
    baseline-version: 1.0

  jackson:
    serialization:
      write-dates-as-timestamps: false
    serialization-inclusion: non-empty

server:
  port: 8080
  servlet:
    context-path: /

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when_authorized
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
      sla:
        http:
          server:
            requests: 1ms,5ms

logging:
  level:
    org.springframework.web: INFO
    org.hibernate: INFO
    org.flyway: DEBUG
    com.zaxxer.hikari: DEBUG
    io.pivotal: DEBUG
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

---

spring:
  config:
    activate:
      on-profile: postgres
  datasource:
    url: jdbc:postgresql://localhost:5432/geo_data
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver

---

spring:
  config:
    activate:
      on-profile: seeded
  flyway:
    locations: classpath:db/migration, classpath:db/sql/test

---

spring:
  config:
    activate:
      on-profile: hsql
  datasource:
    driver-class-name: org.hsqldb.jdbc.JDBCDriver
    url: jdbc:hsqldb:mem:geo_data
    username: sa
    password:

---

spring:
  config:
    activate:
      on-profile: cloud

---

spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://postgres:5432/geo_data

---

spring:
  config:
    activate:
      on-profile: k8s
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:postgres-service}:5432/${POSTGRES_DB:geo_data}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD}